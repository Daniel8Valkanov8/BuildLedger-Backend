name: Maven CI Test

on:
  push:
    branches:
      - main

jobs:
  setup-db:
    name: Set Up MySQL Database
    runs-on: ubuntu-latest
    steps:
      - name: Start MySQL Service
        uses: mirromutth/mysql-action@v1
        with:
          mysql-version: '8.0'
          root-password: '1312'
          database: 'buildLedgerSchema'

      - name: Verify MySQL Connection
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -P 3306 -u root -p1312 -e "SHOW DATABASES;"

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: setup-db
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: 'maven'

      - name: Verify Java Version
        run: java -version

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Clear Maven Cache
        run: rm -rf ~/.m2/repository

      - name: Build with Maven
        run: mvn -X -e clean compile

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [setup-db, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Run Maven Tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/buildLedgerSchema?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 1312
          AWS_REGION: eu-north-1
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

